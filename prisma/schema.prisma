generator client {
  provider = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
  binaryTargets = [ "native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// 계정 스키마

model Account {
  id        Int      @id @default(autoincrement())

  email     String   @unique
  password  String

  lastLoggedIn DateTime? @default(now())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?
}

/// 아이템 스키마

model Item {
  id Int @id @default(autoincrement())
  type ItemType @default(NONE)

  name String @db.VarChar(255)
  grade ItemGrade @default(COMMON)
  description String @db.VarChar(255)

  equipmentType ItemEquipmentType @default(NONE)

  headId Int?
  headAccId Int?
  hairId Int?
  chestId Int?
  spineId Int?
  spine2Id Int?
  armsId Int?
  legsId Int?

  leftWeaponId Int?
  rightWeaponId Int?
  
  leftShieldId Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  headItemEquipments UserEquipment[] @relation("headItem")
  torsoItemEquipments UserEquipment[] @relation("torsoItem")
  legsItemEquipments UserEquipment[] @relation("legsItem")
  leftWeaponItemEquipments UserEquipment[] @relation("leftWeaponItem")
  rightWeaponItemEquipments UserEquipment[] @relation("rightWeaponItem")
  leftShieldItemEquipments UserEquipment[] @relation("leftShieldItem")
}

enum ItemType {
  NONE
  USABLE
  EQUIP
}

enum ItemGrade {
  COMMON
  RARE
  EPIC
  UNIQUE
}

enum ItemEquipmentType {
  NONE
  HEAD
  TORSO
  LEGS
  WEAPON
  SHIELD
}


// 유저 스키마

model User {
  id Int @id @default(autoincrement())
  accountId Int

  name String @db.VarChar(255)
  level Int @default(1)

  headId Int
  hairId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  equipment UserEquipment?
}

model UserWallet {
  id Int @id @default(autoincrement())
  userId Int @unique

  balanceCash Decimal @default(0)
  balanceFreeCash Decimal @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UserInventoryItem {
  id Int @id @default(autoincrement())
  
  userId Int
  itemId Int
  amount Int @default(1)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UserEquipment {
  userId Int @id @unique
  user User @relation(fields: [userId], references: [id])

  headItemId Int?
  headItem Item? @relation(name: "headItem", fields: [headItemId], references: [id])

  torsoItemId Int?
  torsoItem Item? @relation(name: "torsoItem", fields: [torsoItemId], references: [id])

  legsItemId Int?
  legsItem Item? @relation(name: "legsItem", fields: [legsItemId], references: [id])

  leftWeaponItemId Int?
  leftWeaponItem Item? @relation(name: "leftWeaponItem", fields: [leftWeaponItemId], references: [id])

  rightWeaponItemId Int?
  rightWeaponItem Item? @relation(name: "rightWeaponItem", fields: [rightWeaponItemId], references: [id])
 
  leftShieldItemId Int?
  leftShieldItem Item? @relation(name: "leftShieldItem", fields: [leftShieldItemId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

/// 퀴즈 스키마

model Quiz {
  id Int @id @default(autoincrement())

  level QuizLevel
  category QuizCategory

  question String @db.VarChar(255)

  answerChoices Json @db.Json
  answerChoiceIndex Int
  answerScore Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum QuizCategory {
  KOREAN
  ENGLISH
  MATH
  COMMON_SENSE
  NUNSENSE
}

enum QuizLevel {
  EASY
  NORMAL
  HARD
}